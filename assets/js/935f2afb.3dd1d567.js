"use strict";(self.webpackChunkoffensive_cloud=self.webpackChunkoffensive_cloud||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Intro","href":"/offensive-cloud/docs/intro","docId":"intro"},{"type":"category","label":"AWS","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"AWS_SSO","href":"/offensive-cloud/docs/AWS/AWS_SSO","docId":"AWS/AWS_SSO"},{"type":"link","label":"Cognito","href":"/offensive-cloud/docs/AWS/Cognito","docId":"AWS/Cognito"},{"type":"link","label":"IAM_ROLES_BACKDOOR","href":"/offensive-cloud/docs/AWS/IAM_ROLES_BACKDOOR","docId":"AWS/IAM_ROLES_BACKDOOR"},{"type":"link","label":"IAM_ROLES_ENUM","href":"/offensive-cloud/docs/AWS/IAM_ROLES_ENUM","docId":"AWS/IAM_ROLES_ENUM"},{"type":"link","label":"S3","href":"/offensive-cloud/docs/AWS/S3","docId":"AWS/S3"}]},{"type":"category","label":"AZURE","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Blob","href":"/offensive-cloud/docs/AZURE/Blob","docId":"AZURE/Blob"}]},{"type":"category","label":"GCP","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Firebase","href":"/offensive-cloud/docs/GCP/Firebase","docId":"GCP/Firebase"}]},{"type":"link","label":"index","href":"/offensive-cloud/docs/","docId":"index"}]},"docs":{"AWS/AWS_SSO":{"id":"AWS/AWS_SSO","title":"AWS_SSO","description":"AWS Single Sign-On (SSO) OpenID Connect (OIDC) is a web service that enables a client (such as AWS CLI or a native application) to register with AWS SSO. We can create a fake client to phish logged in users. Provided that we know the AWS SSO URL of the organization. The service also enables the client to fetch the user\u2019s access token upon successful authentication and authorization with AWS SSO.","sidebar":"tutorialSidebar"},"AWS/Cognito":{"id":"AWS/Cognito","title":"Cognito","description":"Identity pools allow authenticated or unauthenticated users to access S3 or Dyanmodb. If you have the cognito endpoint and the region it belongs to you could try extracting credentials by using the following","sidebar":"tutorialSidebar"},"AWS/IAM_ROLES_BACKDOOR":{"id":"AWS/IAM_ROLES_BACKDOOR","title":"IAM_ROLES_BACKDOOR","description":"","sidebar":"tutorialSidebar"},"AWS/IAM_ROLES_ENUM":{"id":"AWS/IAM_ROLES_ENUM","title":"IAM_ROLES_ENUM","description":"","sidebar":"tutorialSidebar"},"AWS/S3":{"id":"AWS/S3","title":"S3","description":"All attacks related to S3","sidebar":"tutorialSidebar"},"AZURE/Blob":{"id":"AZURE/Blob","title":"Blob","description":"All attacks related to Azure blobs","sidebar":"tutorialSidebar"},"GCP/Firebase":{"id":"GCP/Firebase","title":"Firebase","description":"","sidebar":"tutorialSidebar"},"index":{"id":"index","title":"index","description":"\ud83d\udc4b Welcome to Offensive Cloud","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Intro","description":"Let\'s discover Get Hacking Cloud.","sidebar":"tutorialSidebar"}}}')}}]);